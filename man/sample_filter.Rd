% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metacoder.R
\name{sample_filter}
\alias{sample_filter}
\title{Filter Samples from Metacoder Objects}
\usage{
sample_filter(obj, .f_transform = NULL, .f_filter = NULL,
  .f_condition = NULL, validated = FALSE, ...)
}
\arguments{
\item{obj}{A Taxmap/metacoder object.}

\item{.f_transform}{A function used for transforming the data.  Default: NULL}

\item{.f_filter}{A function used for summarising the data like 'sum' or 'mean'.  Default: NULL}

\item{.f_condition}{A function that takes the summarised data and applied a condition like x > 10000.  Default: NULL}

\item{validated}{This parameter provides a way to override validation steps.  Use carefully.  Default: FALSE}

\item{...}{An optional list of parameters to use in the .f_filter function specified}
}
\value{
Returns a metacoder object with samples that pass the filters.
}
\description{
This function provides a flexible way to filter unwanted samples from the
\emph{"otu_abundance"} and \emph{"sample_data"} observations of a MicrobiomeR formatted object.
}
\details{
Get the samples to keep by using purr and the user supplied transform and filter + condition formulas.
The purr packge allows the use of anonymous functions as described in the link below:

\url{https://jennybc.github.io/purrr-tutorial/ls03_map-function-syntax.html#anonymous_function,_formula}
}
\examples{
\dontrun{
if(interactive()){
# Use the sample_filter early on in your analysis
library(MicrobiomeR)
library(metacoder)
library(taxa)
# Convert Phyloseq object to metacoder object
metacoder_obj <- as_MicrobiomeR_format(obj = phyloseq_obj, format = "raw_format")

# Remove Archaea from the metacoder object
metacoder_obj <- filter_taxa(
  obj = metacoder_obj,
  taxon_names == "Archaea",
  subtaxa = TRUE,
  invert = TRUE)

# Ambiguous Annotation Filter - Remove taxonomies with ambiguous names
metacoder_obj <- filter_ambiguous_taxa(metacoder_obj, subtaxa = TRUE)

# Low Sample Filter - Remove the low samples
metacoder_obj <- sample_filter(obj          = metacoder_obj,
                               .f_filter    = ~sum(.),
                               .f_condition = ~.>= 20, validated = TRUE)
 }
}
}
\seealso{
\code{\link[MicrobiomeR]{validate_MicrobiomeR_format}},  \code{\link[MicrobiomeR]{transformer}}

\code{\link[taxa]{get_dataset}}

\code{\link[dplyr]{select_all}},  \code{\link[dplyr]{select}},  \code{\link[dplyr]{filter}}

\code{\link[purrr]{map}},  \code{\link[purrr]{keep}}

Other Metacoder Filters: \code{\link{agglomerate_metacoder}},
  \code{\link{cov_filter}}, \code{\link{otu_id_filter}},
  \code{\link{otu_prevalence_filter}},
  \code{\link{otu_proportion_filter}},
  \code{\link{taxa_prevalence_filter}},
  \code{\link{taxon_id_filter}}
}
\concept{Metacoder Filters}
